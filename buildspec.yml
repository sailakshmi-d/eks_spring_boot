 version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - IMAGE_TAG=v1.$CODEBUILD_BUILD_NUMBER
      - REPO_URI=185187793433.dkr.ecr.us-east-1.amazonaws.com/spring-demo
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPO_URI

  build:
    commands:
      - echo Building the JAR file...
      - |
        for i in {1..3}; do
          mvn clean install -Dmaven.wagon.http.retryHandler.count=3 && break || {
            echo "⚠️ Maven build failed (attempt $i)... retrying in 10 seconds"
            sleep 10
          }
        done
      - echo Building Docker image...
      - docker build -t spring-demo:$IMAGE_TAG .
      - docker tag spring-demo:$IMAGE_TAG $REPO_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing Docker image to Amazon ECR...
      - docker push $REPO_URI:$IMAGE_TAG
      - echo Creating deployment manifests...
      - mkdir -p k8s-out
      - sed "s|IMAGE_PLACEHOLDER|$REPO_URI:$IMAGE_TAG|g" k8s/deployment.yaml > k8s-out/deployment.yaml
      - cp k8s/service.yaml k8s-out/service.yaml
      - echo "✅ Files in k8s-out directory:"
      - ls -la k8s-out
      - echo "🔍 deployment.yaml content:"
      - cat k8s-out/deployment.yaml

artifacts:
  base-directory: .
  files:
    - k8s-out/deployment.yaml
    - k8s-out/service.yaml
  discard-paths: no

